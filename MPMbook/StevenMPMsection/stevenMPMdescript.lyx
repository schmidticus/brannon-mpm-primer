#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\headheight 2cm
\headsep 2cm
\footskip 1cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\align center

\size larger
Introduction to the Material Point Method
\end_layout

\begin_layout Standard
\align center

\size larger
with review of the Finite Element Method
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
\align center

\size large
Steven Schmidt
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
This is an attempt to describe in as brief, plain, and specific terms as
 possible what the Material Point Method is, and how it works, in relation
 to the Finite Element method from which it was derived.
 As part of this, the Finite Element method will be reviewed.
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard

\series bold
Finite Element Method
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
In principle, the Finite Element method is a method of finding an approximate
 solution to a Partial or Ordinary Differential Equation (ODE or PDE).
 There are many ODEs and PDEs that can be solved using this method.
 Here are some examples:
\end_layout

\begin_layout Standard
The Heat Equation:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
-\triangledown^{2}u(x,y)=\frac{\partial u(x,y)}{\partial t}
\]

\end_inset


\end_layout

\begin_layout Standard
The Navier-Stokes Equations:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
(etc.)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
(etc.)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\]

\end_inset


\end_layout

\begin_layout Standard
In the Engineering world, one in particular is very commonly solved using
 this method, which is: 
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
Static Stress/Strain Equation (where 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $u$
\end_inset


\begin_inset Quotes erd
\end_inset

 represents displacement):
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{\partial}{\partial x}\left(AE\frac{\partial u}{\partial x}\right)+f(x)=0
\]

\end_inset

Dynamic Stress/Strain Equation:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{\partial}{\partial x}\left(AE\frac{\partial u(x,t)}{\partial x}\right)+f(x)=\rho(x)A(x)\frac{\partial^{2}u}{\partial t^{2}}
\]

\end_inset

(Note that while I wrote these in their 1D form, they can be represented
 in n-D.)
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
Some important notes:
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
1.
 The Stress/Strain equation is what is very frequently solved when doing
 FEM and MPM, so it is the equation that we will examine in this document.
 (Be aware that often times when people say 
\begin_inset Quotes eld
\end_inset

Finite Element
\begin_inset Quotes erd
\end_inset

 they mean using FEM to solve this equation).
\end_layout

\begin_layout Standard
2.
 However, I want to emphasize that the FEM and MPM methods are at their
 most fundimental level simply a means of solving any ODE or PDE.
 The set of values we obtain at the end of the FEM or MPM method is used
 to obtain an approximate representation of 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $u(x)$
\end_inset


\begin_inset Quotes erd
\end_inset

 (or 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $u(x,y,...)$
\end_inset


\begin_inset Quotes erd
\end_inset

) at each timestep!
\end_layout

\begin_layout Standard
3.
 The process we go through to obtain the FEM and MPM algorithms results
 in a representation of these equations that are very different in appearance
 to the original equations.
\end_layout

\begin_layout Standard
4.
 The process we describe of solving a FEM or MPM method often requires construct
ing large matrices and solving large systems of equations, but in many cases
 the actual computer algorithm will not construct these matrices, but rather
 do the equivalent through other iterative or algorithmic means.
 You might ask yourself, 
\begin_inset Quotes eld
\end_inset

Wait, what happened to the ______ matrix? I don't see it anywhere in this
 algorithm!
\begin_inset Quotes erd
\end_inset

 Yup, you don't see it anywhere in that algorithm.
 But the mathematical equivalent is there...
 somewhere.
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard

\series bold
Review of the standard Strong Form to Weak Form to Discretization of the
 Finite Element Method
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard

\series bold
Strong Form to Weak Form:
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
First, we have:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{d}{dx}[A(x)E(x)\frac{du(x,t)}{dx}]+f(x,t)=\rho(x)A(x)a(x,t)
\]

\end_inset


\end_layout

\begin_layout Standard
(With units:)
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
(\frac{1}{m})\left((m^{2})(\frac{kg\cdot m/s^{2}}{m^{2}})(\frac{m}{m})\right)+\frac{(kg\cdot m/s^{2})}{m}=(\frac{kg}{m^{3}})(m^{2})(\frac{m}{s^{2}})
\]

\end_inset


\end_layout

\begin_layout Standard
(simplifying:)
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left((\frac{kg\cdot m/s^{2}}{m})\right)+\frac{(kg\cdot m/s^{2})}{m}=\frac{(kg\cdot m/s^{2})}{m}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $u(x,t)$
\end_inset

 is displacement.
 [
\begin_inset Formula $m$
\end_inset

]
\end_layout

\begin_layout Standard
\begin_inset Formula $a(x,t)$
\end_inset

 is the acceleration.
 Put another way, 
\begin_inset Formula $a(x,t)=\frac{d^{2}u(x,t)}{dt^{2}}$
\end_inset

.
 [
\begin_inset Formula $m/s^{2}$
\end_inset

]
\end_layout

\begin_layout Standard
\begin_inset Formula $f(x,t)$
\end_inset

 is the 
\begin_inset Quotes eld
\end_inset

body force
\begin_inset Quotes erd
\end_inset

 (really a 
\begin_inset Quotes eld
\end_inset

force density
\begin_inset Quotes erd
\end_inset

) (usually something like gravity) [
\begin_inset Formula $N/m$
\end_inset

]
\end_layout

\begin_layout Standard
\begin_inset Formula $A(x)$
\end_inset

 is the cross sectional area of a bar.
 (Time invariant).
 [
\begin_inset Formula $m^{2}$
\end_inset

]
\end_layout

\begin_layout Standard
\begin_inset Formula $E(x)$
\end_inset

 is the Young's Modulous of the bar.
 (Time invariant).
 [
\begin_inset Formula $N/m^{2}$
\end_inset

]
\end_layout

\begin_layout Standard
\begin_inset Formula $\rho(x)$
\end_inset

 is a volume-mass-density (mass per unit volume), which makes 
\begin_inset Formula $\rho(x)A(x)$
\end_inset

 a linear-mass-density (mass per unit length).
 (Time invariant).
 [
\begin_inset Formula $kg/m^{3}]$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
Continuing, we integrate everywhere over the domain and multiply by a weight
 function 
\begin_inset Formula $w(x,t)$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\int_{0}^{L}w(x,t)\frac{d}{dx}[A(x)E(x)\frac{du(x,t)}{dx}]dx+\int_{0}^{L}w(x,t)f(x,t)dx=\int_{0}^{L}w(x,t)\rho(x)A(x)a(x,t)dx
\]

\end_inset


\end_layout

\begin_layout Standard
Integration by parts to move the derivative in x to the weight function:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
w(x,t)A(x)E(x)\frac{du(x,t)}{dx}\vert_{x=0}^{x=L}-\int_{0}^{L}\frac{dw(x,t)}{dx}A(x)E(x)\frac{du(x,t)}{dx}dx+\int_{0}^{L}w(x,t)f(x,t)dx=\int_{0}^{L}w(x,t)\rho(x)A(x)a(x,t)dx
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
w(L,t)A(L)E(L)\frac{du(L,t)}{dx}-w(0,t)A(0)E(0)\frac{du(0,t)}{dx}-\int_{0}^{L}\frac{dw(x,t)}{dx}A(x)E(x)\frac{du(x,t)}{dx}dx+\int_{0}^{L}w(x,t)f(x,t)dx=\int_{0}^{L}w(x,t)\rho(x)A(x)a(x,t)dx
\]

\end_inset


\end_layout

\begin_layout Standard
For sake of simplicity, the boundary terms go to zero: (TODO: find out why).
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
-\int_{0}^{L}\frac{dw(x,t)}{dx}A(x)E(x)\frac{du(x,t)}{dx}dx+\int_{0}^{L}w(x,t)f(x,t)dx=\int_{0}^{L}w(x,t)\rho(x)A(x)a(x,t)dx
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard

\series bold
Discretization:
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{N}$
\end_inset

 is the vector of shape functions.
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{B}$
\end_inset

 is the vector of the derivative of the shape functions.
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{w(t)}$
\end_inset

 is the vector of values of 
\begin_inset Formula $w(x,t)$
\end_inset

 at 
\begin_inset Formula $x=x_{i}$
\end_inset

, the location of each node 
\begin_inset Formula $i$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{u(t)}$
\end_inset

 is the vector of values of 
\begin_inset Formula $u(x,t)$
\end_inset

 at 
\begin_inset Formula $x=x_{i}$
\end_inset

, the location of each node 
\begin_inset Formula $i$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{a(t)}$
\end_inset

 is the vector of values of 
\begin_inset Formula $a(x,t)$
\end_inset

 at 
\begin_inset Formula $x=x_{i}$
\end_inset

, the location of each node 
\begin_inset Formula $i$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
w(x,t)\approx\boldsymbol{w(t)}^{T}\boldsymbol{N}=\boldsymbol{N}^{T}\boldsymbol{w(t)}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{dw(x,t)}{dx}\approx\boldsymbol{w(t)}^{T}\boldsymbol{B}=\boldsymbol{B}^{T}\boldsymbol{w(t)}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{du(x,t)}{dx}\approx\boldsymbol{u(t)}^{T}\boldsymbol{B}=\boldsymbol{B}^{T}\boldsymbol{u(t)}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
a(x,t)\approx\boldsymbol{a(t)}^{T}\boldsymbol{N}=\boldsymbol{N}^{T}\boldsymbol{a(t)}
\]

\end_inset


\end_layout

\begin_layout Standard
Thus we have:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
-\int_{0}^{L}\boldsymbol{w(t)}^{T}\boldsymbol{B}A(x)E(x)\boldsymbol{B}^{T}\boldsymbol{u(t)}dx+\int_{0}^{L}\boldsymbol{w(t)}^{T}\boldsymbol{N}f(x,t)dx=\int_{0}^{L}\boldsymbol{w(t)}^{T}\boldsymbol{N}\rho(x)A(x)\boldsymbol{N}^{T}\boldsymbol{a(t)}dx
\]

\end_inset


\end_layout

\begin_layout Standard
We can cancel out the 
\begin_inset Formula $\boldsymbol{w(t)}^{T}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
-\int_{0}^{L}\boldsymbol{B}A(x)E(x)\boldsymbol{B}^{T}\boldsymbol{u(t)}dx+\int_{0}^{L}\boldsymbol{N}f(x,t)dx=\int_{0}^{L}\boldsymbol{N}\rho(x)A(x)\boldsymbol{N}^{T}\boldsymbol{a(t)}dx
\]

\end_inset


\end_layout

\begin_layout Standard
So now we construct a linear system:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
-\boldsymbol{K}\boldsymbol{u}+\boldsymbol{f}=\boldsymbol{M}\boldsymbol{a}
\]

\end_inset


\end_layout

\begin_layout Standard
where
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{K}$
\end_inset

 is the stiffness-matrix.
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{u(t)}$
\end_inset

 is the nodal displacement vector.
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{f}$
\end_inset

 is the body-force vector.
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{M}$
\end_inset

 is the mass matrix.
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{a(t)}$
\end_inset

 is the acceleration vector.
\end_layout

\begin_layout Standard
Note: 
\begin_inset Formula $\boldsymbol{v(t)}$
\end_inset

, the nodal velocity vector, is also known at the beginning of the timestep.
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\boldsymbol{K}=\int_{0}^{L}A(x)E(x)\boldsymbol{B}\boldsymbol{B}^{T}dx
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\boldsymbol{f}=\int_{0}^{L}\boldsymbol{N}f(x,t)dx
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\boldsymbol{M}=\int_{0}^{L}\rho(x)A(x)\boldsymbol{N}\boldsymbol{N}^{T}dx
\]

\end_inset


\end_layout

\begin_layout Standard
So we have:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left\{ -\left[\int_{0}^{L}A(x)E(x)\boldsymbol{B}\boldsymbol{B}^{T}dx\right]\left\{ \boldsymbol{u(t^{n})}\right\} +\left\{ \boldsymbol{f(t^{n})}\right\} \right\} =\left[\int_{0}^{L}\rho(x)A(x)\boldsymbol{N}\boldsymbol{N}^{T}dx\right]\left\{ \boldsymbol{a(t^{n})}\right\} 
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard

\series bold
Important Note:
\end_layout

\begin_layout Standard
It is here that we have two directions we can go.
 In the Static state, the accelerations are zero, so the right hand side
 goes to zero, and we have:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
-\left[\int_{0}^{L}A(x)E(x)\boldsymbol{B}\boldsymbol{B}^{T}dx\right]\left\{ \boldsymbol{u(t^{n})}\right\} +\left\{ \boldsymbol{f(t^{n})}\right\} =0
\]

\end_inset


\end_layout

\begin_layout Standard
In this case, it usually is the displacement that is the unknown, and so
 we arange our problem into a linear system to find the displacement:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left[\int_{0}^{L}A(x)E(x)\boldsymbol{B}\boldsymbol{B}^{T}dx\right]\left\{ \boldsymbol{u(t^{n})}\right\} =\left\{ \boldsymbol{f(t^{n})}\right\} 
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left\{ \boldsymbol{u(t^{n})}\right\} =\left[\int_{0}^{L}A(x)E(x)\boldsymbol{B}\boldsymbol{B}^{T}dx\right]^{-1}\left\{ \boldsymbol{f(t^{n})}\right\} 
\]

\end_inset


\end_layout

\begin_layout Standard
However, when the acceleration is non-zero, we usually flip the problem
 around, and assume that the displacement is known, and that it's the accelerati
on that is unknown.
 The acceleration is solved for so that we can calculate the changes to
 the displacement in time, to form the initial conditions of the following
 timestep:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left\{ \boldsymbol{a(t^{n})}\right\} =\left[\int_{0}^{L}\rho(x)A(x)\boldsymbol{N}\boldsymbol{N}^{T}dx\right]^{-1}\left\{ -\left[\int_{0}^{L}A(x)E(x)\boldsymbol{B}\boldsymbol{B}^{T}dx\right]\left\{ \boldsymbol{u(t^{n})}\right\} +\left\{ \boldsymbol{f(t^{n})}\right\} \right\} 
\]

\end_inset


\end_layout

\begin_layout Standard

\series bold
Important Note:
\end_layout

\begin_layout Standard
This is one of those times where the formal mathematical notation looks
 a lot different than the computer-code.
 When this time-variant equation is programmed into a computer, it is very
 rare to actually construct the global matrices in order to solve for the
 acceleration.
 It is more typical, rather, to iterate over each element, calculating for
 each the force it exerts on the nodes it touches, and then summing on each
 node all the forces acting on that node.
 Then the code forward-integrates in time to find the new location (or displacem
ent) on each node.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\]

\end_inset


\begin_inset Formula 
\[
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\]

\end_inset


\end_layout

\end_body
\end_document
